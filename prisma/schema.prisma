// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model BusinessDomain {
  id  Int @id @default(autoincrement())
  code String
  libelle String
  slug String
  Businesses Business[]
}

model Business {
  id  Int @id @default(autoincrement())
  businessName String
  businessPhoneNums String[]
  businessAddress String
  businessEmails String[]
  businessLegalId String?
  businessDomain BusinessDomain @relation(fields: [businessDomainId],references: [id])
  businessDomainId Int
  user User?
  produits Product[]
  categories Category[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
   id String @id @default(cuid())
   name String 
   email String @unique
   password String
   isActive  Boolean @default(false)
   company Business? @relation(fields: [businessId],references: [id])
   businessId Int? @unique
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
}

model Product {
  id             Int       @id @default(autoincrement())
  name           String    // Nom du produit (obligatoire)
  sku            String?   
  description    String?   // Description optionnelle
  price          Float     // Prix unitaire (obligatoire)
  costPrice      Float?    // Prix d'achat (optionnel, utile pour la marge)
  quantity       Int       @default(0) // Stock actuel (obligatoire)
  minQuantity    Int?      // Stock minimum recommandé (optionnel)
  unit           String?   // Unité de mesure (ex: "pièce", "kg", etc.)
  imageUrl       String?   // Image produit (optionnelle)
  isActive       Boolean   @default(true) // Pour activer/désactiver le produit

  // Relations
  category       Category? @relation(fields: [categoryId], references: [id])
  categoryId     Int?

  business       Business  @relation(fields: [businessId], references: [id])
  businessId     Int

  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  products  Product[]
  business  Business  @relation(fields: [businessId], references: [id])
  businessId Int
}

